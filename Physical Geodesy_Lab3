clear all ; clc; close all; 

% Defining the potential mesh

X=-300000000:15000000:600000000;

Y=-200000000:15000000:300000000;

[x y]=meshgrid(X,Y);

% Given Parameters

k=10; % k Value

Mass_Earth=5.9736*10^24; % Mass of the Earth (in kg)

Radius_Earth=6371*1000; % Radius of the Earth (in m)

Mass_moon=7.349*10^22; %Mass of the Moon (in kg)

Radius_moon=1738*1000; % Radius of the Moon (in m)

distance_Earth_Moon=384400*1000; % Distance between Earth and Moon (in m)

% Getting Coordinates of the moon respect to earth

Xm=distance_Earth_Moon*cos(k*pi/180); 

Ym=distance_Earth_Moon*sin(k*pi/180);

% Densities

density_Earth=Mass_Earth/(4/3*pi*Radius_Earth^3); % earth density

density_Moon=Mass_moon/(4/3*pi*Radius_moon^3); % moon density

% Gravitational potential of earth and moon

V_Sphere_Earth=V_sphere(x,y,Radius_Earth,0,0,density_Earth);

V_Sphere_Moon=V_sphere(x,y,Radius_moon,Xm,Ym,density_Moon);

% Sum the potentional of Earth and moon

V_total=V_Sphere_Earth+V_Sphere_Moon;

% Compute the attraction of the earth and moon

[a_x_earth a_y_earth]=a_sphere(x,y,Radius_Earth,0,0,density_Earth);

[a_x_moon a_y_moon]=a_sphere(x,y,Radius_moon,Xm,Ym,density_Moon);

% Combine the attraction

attraction_x=a_x_earth+a_x_moon;

attraction_y=a_y_earth+a_y_moon;

attraction=sqrt(attraction_x.^2+attraction_y.^2);

% Plot the potential and attraction fields

% Define countours 

interval=floor(logspace(0,1.65));

figure(1); hold on; 

[C,h]=contour(x,y,V_total*0.00001,interval);

clabel(C,h,'LabelSpacing',750,'FontSize',10,'FontWeight','bold'); % for labeling the isolines

text(Xm,Ym,'Moon','FontSize',11,'FontWeight','bold')

text(0,0,'Earth','FontSize',11,'FontWeight','bold','BackgroundColor',[.7 .9 .7])

% Plot the vectors

quiver(x,y, attraction_x./attraction , attraction_y./attraction ,0.5);

title('Superimposed Gravitation potentials and Gravitation accelerations of Earth and Moon');

xlabel('X(m)'); ylabel('Y(m)')

% The function computes the potential of the sphere

% input values to the function are

% X = meshgrid values 

% Y = meshgrid values

% R = radius(in m)

% Xm = coordinates (X) (in m )

% Ym = coordinate Y (in m)

% desnsity = (in kg/m^3)

% output of the function

% V = array of potential (in [m2/s2]))

function [V]= V_sphere(X,Y,R,Xm,Ym,density)

 G=6.672e-11; % in m^3*s^-2*kg-1

 r=sqrt(((X-Xm).^2.+(Y-Ym).^2));

 V=zeros(size(r));

 % r<R

 V(r<R)=2*pi*G*density*(R^2-(1/3)*r(r<R).^2); 

 % r>R

 V((r>R))=(4/3)*pi*G*density*R^3*(1./r(r>R));

 % r=R

 V((r==R))=(4/3)*pi*G*density*R^3*(1./r(r==R)); 

end

 

% The function computes the attraction of the sphere

% input values to the function are

% X = meshgrid values 

% Y = meshgrid values

% R = radius(in m)

% Xm = coordinates (X) (in m )

% Ym = coordinate Y (in m)

% density (in kg/m^3)

% output of the function

% ax, ay = matrix of attraction (in [m/s2])

function [ax ay]= a_sphere(X,Y,R,Xm,Ym,density)

 G=6.672e-11; % in m^3*s^-2*kg-1

 r=sqrt(((X-Xm).^2.+(Y-Ym).^2));

 ax=zeros(size(r));

 ay=zeros(size(r));

 % r<R

 ax(r<=R)=(-4/3)*pi*G*density*r(r<=R).*((X(r<=R)-Xm)./r(r<=R)); 

 ay(r<=R)=(-4/3)*pi*G*density*r(r<=R).*((Y(r<=R)-Ym)./r(r<=R)); 

 % r>R

 ax(r>R)=(-4/3)*pi*G*density*R^3*(1./r(r>R).^2).*((X(r>R)-Xm)./r(r>R));

 ay(r>R)=(-4/3)*pi*G*density*R^3*(1./r(r>R).^2).*((Y(r>R)-Ym)./r(r>R));
 
 % r=R

 ax(r==R)=(-4/3)*pi*G*density*R^3*(1./r(r==R).^2).*((X(r==R)-Xm)./r(r==R));

 ay(r==R)=(-4/3)*pi*G*density*R^3*(1./r(r==R).^2).*((Y(r==R)-Ym)./r(r==R));
end
 
